// Code generated by protoc-gen-go. DO NOT EDIT.
// source: redfinlib.proto

package redfinlib

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Stats struct {
	CurrentPrice         int32    `protobuf:"varint,1,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddaac600666cb139, []int{0}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetCurrentPrice() int32 {
	if m != nil {
		return m.CurrentPrice
	}
	return 0
}

func init() {
	proto.RegisterType((*Stats)(nil), "redfinlib.Stats")
}

func init() { proto.RegisterFile("redfinlib.proto", fileDescriptor_ddaac600666cb139) }

var fileDescriptor_ddaac600666cb139 = []byte{
	// 89 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x4a, 0x4d, 0x49,
	0xcb, 0xcc, 0xcb, 0xc9, 0x4c, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0xe9, 0x70, 0xb1, 0x06, 0x97, 0x24, 0x96, 0x14, 0x0b, 0x29, 0x73, 0xf1, 0x26, 0x97, 0x16, 0x15,
	0xa5, 0xe6, 0x95, 0xc4, 0x17, 0x14, 0x65, 0x26, 0xa7, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06,
	0xf1, 0x40, 0x05, 0x03, 0x40, 0x62, 0x49, 0x6c, 0x60, 0xfd, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xc1, 0xbb, 0x6d, 0x0c, 0x52, 0x00, 0x00, 0x00,
}
